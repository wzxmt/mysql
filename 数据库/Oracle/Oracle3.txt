
老男孩Oracle体验课-day01


环境准备:

1.关闭NetworkManager 

chkconfig NetworkManager off 
/etc/init.d/NetworkManager stop 

2.修改网卡配置
vim /etc/sysconfig/network-scripts/ifcfg-eth0
DEVICE=eth0
ONBOOT=yes
IPADDR=10.0.0.58
NETMASK=255.255.255.0
/etc/init.d/network restart


3. 防火墙关闭
selinux :
[root@db08 ~]# setenforce 0
[root@db08 ~]# vim /etc/selinux/config 

iptables :
[root@db08 ~]# /etc/init.d/iptables stop
iptables: Flushing firewall rules:                         [  OK  ]
iptables: Setting chains to policy ACCEPT: filter          [  OK  ]
iptables: Unloading modules:                               [  OK  ]
[root@db08 ~]# chkconfig iptables off


4. 配置本地yum源

vim /etc/yum.repos.d/rhel-source.repo
[rhel-source]
name=local-iso
baseurl=file:///mnt/Server
enabled=1

挂载光盘镜像
mount /dev/sr0 /mnt
======================================
1、Oracle产品介绍
1.1 Oracle版本说明
7:  7.3.4 
8i: 8.1.7  
9i: 9.2.0.8
10g:10.2.0.4 10.2.0.5 
11g:11.2.0.3  11.2.0.4    
12c:12.2.0.1 
18c:

企业现存版本:
10g:10.2.0.4  10.2.0.5 
11g:11.2.0.3  11.2.0.4    
12c:12.2.0.1 

1.2 Oracle工具网站
oracle.com            ---> 官网
support.oracle.com    ---> MOS
https://edelivery.oracle.com/osdc/faces/Home.jspx --->历史版本及补丁


1.3 Oracle 软件release版本选择
10gR2   11gR2   12cR2

1.4 Oracle 补丁类型
Patch Set Release    PSR
Patch Set Update     PSU
Critical Patch Update CPU

2012年0月已，经更名为Security Patch Update (SPU)
Interim Patch/One-Off Patc


补丁应用方法和注意事项：
   以上的补丁除了psr直接使用runInstaller，其他的补丁类型都是使用opatch命令，在oracle 10g之前，我们需要单独下载此命令，到oracle 10g之后这个命令在 ORACLE_HOME/Opatch下，因此，最好在环境变量path中添加以下

10.2.0.1   ----> 升级成  10.2.0.5 
11.2.0.1   ---->         11.2.0.4 


2. Oracle 11g安装

2.0 Oracle11g软件包介绍

database(RDBMS): 
1of7
2of7 

cluser软件(grid):
3of7 : 集群功能,独立的存储功能(ASM)

2.1. 检查内存，至少1G
grep MemTotal /proc/meminfo

2.2.交换分区
    Available RAM            Swap Space Required 
    Between 1 GB and 2 GB    1.5 times the size of RAM 
    Between 2 GB and 16 GB   Equal to the size of RAM 
    More than 16 GB          16 GB 
	
grep "model name" /proc/cpuinfo
grep SwapTotal /proc/meminfo

free
total       used       free     shared    buffers     cached
Mem:       1035140     512924     522216          0      51236     335880
-/+ buffers/cache:     125808     909332
Swap:      1052248          0    1052248

2.3. 共享内存段至少要大于MEMORY_MAX_TARGET and MEMORY_TARGET 
df -k /dev/shm/
Filesystem           1K-blocks      Used Available Use% Mounted on
tmpfs                   517568         0    517568   0% /dev/shm

2.4. 至少1G的 /tmp
df -h /tmp

2.5. 数据库软件和data磁盘空间要求
    Installation Type        Requirement for Software Files (GB) 
    Enterprise Edition        3.95 
    Standard Edition          3.88 

    Installation Type        Requirement for Data Files (GB) 
    Enterprise Edition        1.7 
    Standard Edition        1.5 

2.6. 操作系统版本
    Operating System Requirements
    The following are the operating system requirements for Oracle Database 11g Release 2 (11.2) for Linux x86:

    Asianux 2.0
    Asianux 3.0
    Oracle Enterprise Linux 4.0 Update 7 or later
    Oracle Enterprise Linux 5.0
    Red Hat Enterprise Linux 4.0 Update 7 or later
    Red Hat Enterprise Linux 5.0
    SUSE Linux Enterprise Server 10.0
    SUSE Linux Enterprise Server 11.0
    For Asianux 3, Oracle Enterprise Linux 5.0, and Red Hat Enterprise Linux 5.0: 2.6.18 or later

2.7. 检查软件包

The following or later version of packages for Asianux 3, Oracle Enterprise Linux 5.0, and Red Hat Enterprise Linux 5.0 should be installed:

yum install binutils-*
yum install compat-libstdc++-*
yum install elfutils-libelf-*
yum install elfutils-libelf-devel-*
yum install elfutils-libelf-devel-static-*
yum install gcc-*
yum install gcc-c++-*
yum install glibc-*
yum install glibc-common-*
yum install glibc-devel-*
yum install glibc-headers-*
yum install kernel-headers-*
yum install ksh-*
yum install libaio-*
yum install libaio-devel-* 
yum install libgcc-*
yum install libgomp-*
yum install libstdc++-* 
yum install libstdc++-devel-*
yum install make-*
yum install sysstat-*
yum install unixODBC-*
yum install unixODBC-devel-*

rpm -q --qf '%{NAME}-%{VERSION}-%{RELEASE} (%{ARCH})\n' binutils \
compat-libstdc++ \
elfutils-libelf-devel \
elfutils-libelf-devel-static \
gcc \
gcc-c++ \
glibc \
glibc-common \
glibc-devel \
glibc-headers \
kernel-headers \
ksh \
libaio \
libaio-devel \
libgcc \
libgomp \
libstdc++ \
libstdc++-devel \
make \
sysstat \
unixODBC \
unixODBC-devel \
libXp

2.8. 创建组和用户
/usr/sbin/groupadd oinstall
/usr/sbin/groupadd dba
/usr/sbin/useradd -g oinstall -G dba oracle

echo oracle | passwd --stdin oracle

2.9. 修改内核参数

vim /etc/sysctl.conf

fs.aio-max-nr = 1048576
fs.file-max = 6815744
kernel.shmall = 2097152
kernel.shmmax = 536870912
kernel.shmmni = 4096
kernel.sem = 250 32000 100 128
net.ipv4.ip_local_port_range = 9000 65500
net.core.rmem_default = 262144
net.core.rmem_max = 4194304
net.core.wmem_default = 262144
net.core.wmem_max = 1048586

sysctl -p

2.10. 修改系统限制
vim /etc/security/limits.conf
oracle           soft    nproc   2047
oracle           hard    nproc   16384
oracle           soft    nofile  1024
oracle           hard    nofile  65536

2.11. 
vi /etc/pam.d/login
session    required     pam_limits.so

2.12. 修改profile
if [ $USER = "oracle" ]; then
        if [ $SHELL = "/bin/ksh" ]; then
              ulimit -p 16384
              ulimit -n 65536
        else
              ulimit -u 16384 -n 65536
        fi
fi

2.13. 创建目录结构

分区:
fdisk /dev/sda 
sda5  15G     ---->/u01        ---->本地   软件程序
sda6  20G     ---->/oradata    ---->存储盘 数据存储

mkfs.ext4 /dev/sda5 
mkfs.ext4 /dev/sda6
mkdir /u01  /oradata
mount /dev/sda5 /u01
mount /dev/sda6 /oradata
[root@db08 ~]# blkid
/dev/sda2: UUID="40852d80-1f81-469c-afe2-f3b84847467f" TYPE="ext4" 
/dev/sda1: UUID="a484cae0-ba65-4b19-91fb-8d23bdbcd118" TYPE="ext4" 
/dev/sda3: UUID="76380440-f2c6-4d7b-8343-044069196e2a" TYPE="swap" 
/dev/sda5: UUID="f76191bb-a035-41a4-94c4-2b005c468eba" TYPE="ext4" 
/dev/sda6: UUID="eb9cebaf-2ca0-4467-9476-b2d5f0cc9f0f" TYPE="ext4" 
vim /etc/fstab
UUID="f76191bb-a035-41a4-94c4-2b005c468eba"  /u01 ext4 defaults 0 0 
UUID="eb9cebaf-2ca0-4467-9476-b2d5f0cc9f0f" /oradata ext4 defaults 0 0 


#创建必须目录:
#ORACLE_BASE:存放各类日志
mkdir -p /u01/app/oracle
#ORACLE_HOME:存放程序的目录
mkdir -p /u01/app/oracle/product/11.2.0/db_1

#更改权限:
chown -R oracle:oinstall /u01/
chmod -R 775 /u01/
chown -R oracle:oinstall /oradata 

#切换用户并更改环境变量文件
su - oracle
vim .bash_profile
export ORACLE_BASE=/u01/app/oracle
export ORACLE_HOME=/u01/app/oracle/product/11.2.0/db_1
export ORACLE_SID=orcl
export PATH=$ORACLE_HOME/bin:$PATH

source .bash_profile


2.14. runInstaller

2.15. netca

2.16. dbca

2.17. 基本链接使用
sqlplus / as sysdba

2.18.用户限制解除
set linesize 200
select * from dba_profiles where profile='DEFAULT' and resource_name='PASSWORD_LIFE_TIME';
ALTER PROFILE DEFAULT LIMIT PASSWORD_LIFE_TIME UNLIMITED;

2.19. 开归档

mkdir -p /u01/arch
sqlplus / as sysdba 
archive log list;
show parameter dest;
alter system set log_archive_dest_1='location=/u01/arch/';
shutdown immediate;
startup mount;
alter database archivelog;
alter database open;


3. Oracle网络管理

3.0 Oracle远程连接模型

(1) 本地系统验证(sys用户)

sqlplus  / as sysdba

(2) 远程登录
netca 
listener.ora
sqlplus system/oracle@10.0.0.58:1521/orcl

tnsnames.ora
sqlplus system/oracle@orcl_test






3.1 lisener配置
[oracle@rac1 admin]$ cat listener.ora 
# listener.ora Network Configuration File: /u01/app/oracle/product/11.2/db_1/network/admin/listener.ora
# Generated by Oracle configuration tools.

SID_LIST_LISTENER =
  (SID_LIST =
    (SID_DESC =
      (SID_NAME = PLSExtProc)
      (ORACLE_HOME = /u01/app/oracle/product/11.2/db_1)
      (PROGRAM = extproc)
    )
    (SID_DESC =
      (GLOBAL_DBNAME = testdb)
      (ORACLE_HOME = /u01/app/oracle/product/11.2/db_1)
      (SID_NAME = testdb)
    )
  )

LISTENER =
  (DESCRIPTION =
    (ADDRESS = (PROTOCOL = TCP)(HOST = rac1)(PORT = 1521))
  )

ADR_BASE_LISTENER = /u01/app/oracle



3.2 tnsname配置
[oracle@rac1 admin]$ cat tnsnames.ora 
# tnsnames.ora Network Configuration File: /u01/app/oracle/product/11.2/db_1/network/admin/tnsnames.ora
# Generated by Oracle configuration tools.

TESTDB_1 =
  (DESCRIPTION =
    (ADDRESS_LIST =
      (ADDRESS = (PROTOCOL = TCP)(HOST = 10.0.0.58)(PORT = 1521))
    )
    (CONNECT_DATA =
      (SERVICE_NAME = testdb)
    )
  )

TESTDB =
  (DESCRIPTION =
    (ADDRESS = (PROTOCOL = TCP)(HOST = rac1)(PORT = 1521))
    (CONNECT_DATA =
      (SERVER = DEDICATED)
      (SERVICE_NAME = testdb)
    )
  )

4.Oracle 用户、权限、角色管理
4.0概念介绍
用户：对数据库的访问需要以适当的身份通过验证，这就是用户的作用；每个Oracle用户都有自己的用户名和密码，并且拥有他们所创建的任意表、视图和其他资源，需要注意的是新创建的用户连最基本的访问登入Oracle的权限都没有，所以后续需要授予不同的权限和角色来达成不同的操作目的；

 
实体权限：权限一般分为系统权限和对象权限，系统权限可以通俗地理解为将数据库对象从无到有或从有到无的创建操作，比如说创建和删除表、视图、存储过程、session等这些操作都可以认为是系统权限；对象权限赋予了你在不同的数据库对象上操作的能力，比如DELETE权限允许你对表和视图删除行，SELETE权限允许你对表、视图、序列等进行查询操作！至于系统权限和对象权限分别有哪些，具体请参照Oracle官网，这里不再详细解释！
 
角色：如果多个新建用户需要后续赋予10不等的不同权限，一般方法是需要将10个不等的权限分别列出来进行授予，不但麻烦而且重用性不高，角色的出现就是为了解决这个问题。Oracle角色是一组权限的集合。正常情况下我们可以授予角色一些权限，然后将角色分配给适当的用户；

4.2 权限分类
管理权限：
DBA: 拥有全部特权，是系统最高权限，只有DBA才可以创建数据库结构。
RESOURCE:拥有Resource权限的用户只可以创建对象，不可以创建数据库结构。
CONNECT:拥有Connect权限的用户可以登录Oracle，不可以创建实体，不可以创建数据库结构。
普通对象权限：
select, update, insert, alter, index, delete --->all 代表所有权限
execute -->执行存储过程权限

4.3 用户管理及授权
Oracle 用户管理
## 创建用户的Profile文件
SQL> create profile student limit // student为资源文件名
FAILED_LOGIN_ATTEMPTS 3 //指定锁定用户的登录失败次数
PASSWORD_LOCK_TIME 5 //指定用户被锁定天数
PASSWORD_LIFE_TIME 30 //指定口令可用天数

## 例子：
create profile test limit 
FAILED_LOGIN_ATTEMPTS 3 
PASSWORD_LOCK_TIME 5
PASSWORD_LIFE_TIME 30;


## 创建用户
SQL> Create User username
Identified by password
Default Tablespace tablespace
Temporary Tablespace tablespace
Profile profile
Quota integer/unlimited on tablespace;

## 例:
SQL> Create user oldguo
identified by oldguo 
default tablespace users
temporary tablespace temp
profile test
quota 50m on users;


## 查询用户默认表空间、临时表空间
SQL> select username, default_tablespace, temporary_tablespace from dba_users;

##  查询系统配置文件名：
SQL> select * from dba_profiles;
## 配置文件类似表，一旦创建就会保存在数据库中。
SQL> select username, profile, default_tablespace, temporary_tablespace from dba_users;

SQL> create profile common limit
failed_login_attempts 5
idle_time 5;

SQL> Alter user oldguo profile common;


## 修改用户：
SQL> Alter User 用户名
Identified 口令
Default Tablespace tablespace
Temporary Tablespace tablespace
Profile profile
Quota integer/unlimited on tablespace;

## 修改口令字：
SQL>Alter user oldguo identified by "12345";

## 修改用户缺省表空间：
SQL> Alter user oldguo default tablespace users;

## 修改用户临时表空间
SQL> Alter user oldguo temporary tablespace temp_data;

## 强制用户修改口令字：
SQL> Alter user oldguo password expire;

##将用户加锁
SQL> Alter user oldguo account lock; // 加锁
SQL> Alter user oldguo account unlock; // 解锁


## 删除用户
SQL>drop user 用户名; //用户没有建任何实体
SQL> drop user 用户名 CASCADE; // 将用户及其所建实体全部删除


## 查询用户会话信息：
SQL> select username, sid, serial#, machine from v$session;

## 删除用户会话信息：
SQL> Alter system kill session 'sid, serial#';

## 查询用户SQL语句：
SQL> select user_name, sql_text from v$open_cursor;

## 创建用户及授权管理权限
SQL> Create user user50 identified by user50;
SQL> grant connect, resource to user50;

## 查询用户拥有哪里权限：
set linesize 200;
select * from dba_role_privs where grantee='USER50';
select * from dba_sys_privs where grantee='USER50';
select * from role_sys_privs where grantee='USER50';

## 系统权限传递：
增加WITH ADMIN OPTION选项，则得到的权限可以传递。

grant connect, resorce to user50 with admin option; 

## 系统权限回收：系统权限只能由DBA用户回收
Revoke connect, resource from user50;

##普通对象权限管理
SQL> grant select, update, insert on product to user01;
SQL> grant all on product to user02;

##将表的操作权限授予全体用户：
SQL> grant all on product to public; 

## 用户可以查询的表
SQL> select owner, table_name from all_tables; 
## 用户创建的表
SQL> select table_name from user_tables; 
## 获权可以存取的表（被授权的）
SQL> select grantor, table_schema, table_name, privilege from all_tab_privs; 
 // 授出权限的表(授出的权限)
SQL> select grantee, owner, table_name, privilege from user_tab_privs;
4.4 角色管理
角色是一组权限的集合，将角色赋给一个用户，这个用户就拥有了这个角色中的所有权限。

# 系统预定义角色
　　预定义角色是在数据库安装后，系统自动创建的一些常用的角色。下介简单的介绍一下这些预定角色。角色所包含的权限可以用以下语句查询：
sql>select * from role_sys_privs where role='角色名';

1．CONNECT, RESOURCE, DBA
这些预定义角色主要是为了向后兼容。其主要是用于数据库管理。oracle建议用户自己设计数据库管理和安全的权限规划，而不要简单的使用这些预定角色。将来的版本中这些角色可能不会作为预定义角色。

2．DELETE_CATALOG_ROLE， EXECUTE_CATALOG_ROLE， SELECT_CATALOG_ROLE
这些角色主要用于访问数据字典视图和包。

3．EXP_FULL_DATABASE， IMP_FULL_DATABASE
这两个角色用于数据导入导出工具的使用。

4．AQ_USER_ROLE， AQ_ADMINISTRATOR_ROLE
AQ:Advanced Query。这两个角色用于oracle高级查询功能。

5． SNMPAGENT
用于oracle enterprise manager和Intelligent Agent

6．RECOVERY_CATALOG_OWNER
用于创建拥有恢复库的用户。关于恢复库的信息，参考oracle文档《Oracle9i User-Managed Backup and Recovery Guide》

7．HS_ADMIN_ROLE
A DBA using Oracle's heterogeneous services feature needs this role to access appropriate tables in the data dictionary.

管理角色
## 建一个角色
sql>create role role1;


## 授权给角色
sql>grant create any table,create procedure to role1;


## 授予角色给用户
sql>grant role1 to user1;


## 查看角色所包含的权限
sql>select * from role_sys_privs;


## 创建带有口令以角色(在生效带有口令的角色时必须提供口令)
sql>create role role1 identified by password1;


## 修改角色：是否需要口令
sql>alter role role1 not identified;
sql>alter role role1 identified by password1;


## 设置当前用户要生效的角色
(注：角色的生效是一个什么概念呢？假设用户a有b1,b2,b3三个角色，那么如果b1未生效，则b1所包含的权限对于a来讲是不拥有的，只有角色生效了，角色内的权限才作用于用户，最大可生效角色数由参数MAX_ENABLED_ROLES设定；在用户登录后，oracle将所有直接赋给用户的权限和用户默认角色中的权限赋给用户。）
sql>set role role1;//使role1生效
sql>set role role,role2;//使role1,role2生效
sql>set role role1 identified by password1;//使用带有口令的role1生效
sql>set role all;//使用该用户的所有角色生效
sql>set role none;//设置所有角色失效
sql>set role all except role1;//除role1外的该用户的所有其它角色生效。
sql>select * from SESSION_ROLES;//查看当前用户的生效的角色。


## 修改指定用户，设置其默认角色
sql>alter user user1 default role role1;
sql>alter user user1 default role all except role1;
详见oracle参考文档

## 删除角色
sql>drop role role1;
角色删除后，原来拥用该角色的用户就不再拥有该角色了，相应的权限也就没有了









